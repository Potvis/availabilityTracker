services:
  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=kangoo
      - POSTGRES_USER=kangoo
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kangoo"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - kangoo-network

  web:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    command: gunicorn kangoo_project.wsgi:application --bind 0.0.0.0:8000 --workers 3 --timeout 60 --keep-alive 5 --access-logfile - --error-logfile - --log-level info
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/media
    expose:
      - 8000
    environment:
      - DATABASE=postgres
      - SQL_HOST=db
      - SQL_PORT=5432
      - DB_PASSWORD=${DB_PASSWORD}
      - DATABASE_URL=postgresql://kangoo:${DB_PASSWORD}@db:5432/kangoo
      - DEBUG=False
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - CSRF_TRUSTED_ORIGINS=${CSRF_TRUSTED_ORIGINS}
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - kangoo-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/admin/login/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s

  nginx:
    build: ./nginx
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/media
    ports:
      - "8085:80"
    depends_on:
      web:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - kangoo-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:80/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

volumes:
  postgres_data:
  static_volume:
  media_volume:

networks:
  kangoo-network:
    driver: bridge